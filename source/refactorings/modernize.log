>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/0387ed00-8ff4-4baf-a9fc-5be787dc050e.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/0387ed00-8ff4-4baf-a9fc-5be787dc050e.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/0387ed00-8ff4-4baf-a9fc-5be787dc050e.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/0387ed00-8ff4-4baf-a9fc-5be787dc050e.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket,AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 
@@ -13,17 +15,17 @@
 	while True:
 		try:
 			client, client_addr = server.accept()
-			print("Csatlakozott: ", client_addr)
+			print(("Csatlakozott: ", client_addr))
 			
 			data = client.recv(unpacker.size)
-			print("Kaptam:",data)
+			print(("Kaptam:",data))
 			
 			unp_data = unpacker.unpack(data)
-			print("Unpack:",unp_data)
+			print(("Unpack:",unp_data))
 			
 			x = eval(str(unp_data[0])+unp_data[2].decode()+str(unp_data[1]))
 			
-			print("Kiertekeltem es visszakuldtem", x)
+			print(("Kiertekeltem es visszakuldtem", x))
 			client.sendall(str(x).encode())
 		
 		except timeout:
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/0387ed00-8ff4-4baf-a9fc-5be787dc050e.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/07c621b1-b8da-46fb-82f5-d493d8880779.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/07c621b1-b8da-46fb-82f5-d493d8880779.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/07c621b1-b8da-46fb-82f5-d493d8880779.modernize.py	(refactored)
@@ -1,6 +1,8 @@
 
 #socket_multicast_receiver.py
 
+from __future__ import absolute_import
+from __future__ import print_function
 import socket
 import struct
 import sys
@@ -32,11 +34,11 @@
         print('\nwaiting to receive message')
         data, address = sock.recvfrom(1024)
         
-        print('received {} bytes from {}'.format(
-            len(data), address))
+        print(('received {} bytes from {}'.format(
+            len(data), address)))
         print(data)
         
-        print('sending acknowledgement to', address)
+        print(('sending acknowledgement to', address))
         sock.sendto(b'ack', address)
     except timeout:
         pass
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/07c621b1-b8da-46fb-82f5-d493d8880779.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/0c38d910-3444-4b38-8226-69a6fab4e1d8.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/0c38d910-3444-4b38-8226-69a6fab4e1d8.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/0c38d910-3444-4b38-8226-69a6fab4e1d8.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/0c38d910-3444-4b38-8226-69a6fab4e1d8.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 from select import select
 import struct
@@ -30,7 +32,7 @@
 			if s is proxy:
 				# kliens csatlakozik
 				client, client_addr = s.accept()
-				print("Connected:", client_addr)
+				print(("Connected:", client_addr))
 				sockets.append(client)
 			else:
 				data = s.recv(packer.size)
@@ -40,9 +42,9 @@
 					sockets.remove(s)
 					s.close()
 				else:
-					print("Recieved:", data)
+					print(("Recieved:", data))
 					decoded_data = data.decode()
-					print("Decoded data:", decoded_data)
+					print(("Decoded data:", decoded_data))
 					
 					# send data without neptun code
 					strings = decoded_data.split(';')
@@ -54,7 +56,7 @@
 					
 					server.sendto(to_send, mpbank_addr)
 					response = server.recvfrom(128)
-					print("recieved:", response[0].decode())
+					print(("recieved:", response[0].decode()))
 					s.sendall(response[0])
 
 # ZH-n is lehet ezt a szerkezetet hasznalni
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/0c38d910-3444-4b38-8226-69a6fab4e1d8.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/0d071062-1275-42df-b58a-ed87ac1270ba.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/0d071062-1275-42df-b58a-ed87ac1270ba.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/0d071062-1275-42df-b58a-ed87ac1270ba.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/0d071062-1275-42df-b58a-ed87ac1270ba.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import socket
 import struct
@@ -18,18 +20,18 @@
 
 packer = struct.Struct('i i c')
 conn, addr = sock.accept()
-print("Valaki csatlakozott:", addr)
+print(("Valaki csatlakozott:", addr))
 while True:
     msg = conn.recv(100)
     if not msg:
         print("A kliens lezárta a kapcsolatot")
         break
     parsed_msg = packer.unpack(msg)
-    print("A kliens üzenete: %d %c %d" % (parsed_msg[0], parsed_msg[2].decode(), parsed_msg[1]))
+    print(("A kliens üzenete: %d %c %d" % (parsed_msg[0], parsed_msg[2].decode(), parsed_msg[1])))
     result = ops[parsed_msg[2].decode()](parsed_msg[0], parsed_msg[1])
     msg = packer.pack(result, 0, b'R')
     conn.sendall(msg)
-    print("Elküldött válasz: %d" % result)
+    print(("Elküldött válasz: %d" % result))
 
 conn.close()
 sock.close()
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/0d071062-1275-42df-b58a-ed87ac1270ba.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/0d0b5480-cfef-4c7c-b48e-ee6cc7297b91.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/0d0b5480-cfef-4c7c-b48e-ee6cc7297b91.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/0d0b5480-cfef-4c7c-b48e-ee6cc7297b91.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/0d0b5480-cfef-4c7c-b48e-ee6cc7297b91.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import struct
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
@@ -23,7 +25,7 @@
 	server.bind(server_addr)
 	server.listen(1)
 	server.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)
-	print('Server is listening on port', server_addr[1])
+	print(('Server is listening on port', server_addr[1]))
 	
 	sockets = [ server ]
 
@@ -37,7 +39,7 @@
 				# client connects
 				client, client_addr = s.accept()
 				sockets.append(client)
-				print("Connected:", client_addr)
+				print(("Connected:", client_addr))
 
 			else:
 				data = s.recv(packer.size)
@@ -47,15 +49,15 @@
 					sockets.remove(s); s.close()
 					print('Client disconnected.')
 				else:
-					print('Recieved:', data)
+					print(('Recieved:', data))
 					unp_data = packer.unpack(data)
-					print('Unpack:', unp_data)
+					print(('Unpack:', unp_data))
 
 					matches = 0
 					for i in range(0, 5):
 						if (unp_data[i] in nums): matches+=1
 					
-					print('Matches:', matches)
+					print(('Matches:', matches))
 					
 					res = (nums[0], nums[1], nums[2], nums[3], nums[4], matches * unp_data[5])
 					packed_res = packer.pack(*res)
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/0d0b5480-cfef-4c7c-b48e-ee6cc7297b91.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/10a70fdd-5a31-451d-ba69-a6eeaa34a0e4.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/10a70fdd-5a31-451d-ba69-a6eeaa34a0e4.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/10a70fdd-5a31-451d-ba69-a6eeaa34a0e4.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/10a70fdd-5a31-451d-ba69-a6eeaa34a0e4.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import struct
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 
@@ -25,9 +27,9 @@
 	client.sendall(packed_data)
 
 	data = client.recv(packer.size)
-	print('recieved:', data)
+	print(('recieved:', data))
 	unpacked_data = packer.unpack(data)
-	print('unpacked data:', unpacked_data)
+	print(('unpacked data:', unpacked_data))
 
-	print('winning numbers:', unpacked_data[0:5])
-	print('you won:', unpacked_data[5])
+	print(('winning numbers:', unpacked_data[0:5]))
+	print(('you won:', unpacked_data[5]))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/10a70fdd-5a31-451d-ba69-a6eeaa34a0e4.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/16ecf573-e9ac-412d-a586-9e610f33f3ab.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/16ecf573-e9ac-412d-a586-9e610f33f3ab.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/16ecf573-e9ac-412d-a586-9e610f33f3ab.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/16ecf573-e9ac-412d-a586-9e610f33f3ab.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from subprocess import Popen, PIPE
 from time import sleep
 import os
@@ -7,15 +9,15 @@
 available_cores = os.cpu_count()
 os_name = platform.system()
 
-print("OS: ", os_name)
-print("number of cores: ", available_cores)
+print(("OS: ", os_name))
+print(("number of cores: ", available_cores))
 
 cmd = ''
 
 if os_name == "Windows": cmd = 'echo Windows'
 elif os_name == "Linux": cmd = 'echo Linux'
 else :
-  print("ERROR: ", os_name)
+  print(("ERROR: ", os_name))
   sys.exit(1)
 
 processes = []
@@ -24,7 +26,7 @@
     p = Popen(cmd, stdout=PIPE, stderr=PIPE, shell=True)
     processes.append(p)
 
-print('Number of processes running: ', len(processes))
+print(('Number of processes running: ', len(processes)))
 
 empty = False
 while (not empty) :
@@ -35,10 +37,10 @@
         runs += 1
       else :
         res, err = p.communicate()
-        print('Process' + str(i+1) + ' : ' + res.decode().strip())
+        print(('Process' + str(i+1) + ' : ' + res.decode().strip()))
         processes[i] = None
     i += 1
   if (runs > 1) : sleep(1)
   else : 
-    print('Ran' + i + ' processes.')
+    print(('Ran' + i + ' processes.'))
     empty = True
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/16ecf573-e9ac-412d-a586-9e610f33f3ab.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/1b9072c6-c76c-4bfd-888a-48a25da04819.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/1b9072c6-c76c-4bfd-888a-48a25da04819.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/1b9072c6-c76c-4bfd-888a-48a25da04819.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/1b9072c6-c76c-4bfd-888a-48a25da04819.modernize.py	(refactored)
@@ -1,3 +1,4 @@
+from __future__ import absolute_import
 import msvcrt
 import time
 import sys
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/1b9072c6-c76c-4bfd-888a-48a25da04819.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/203913a5-d7c1-4d69-bd1e-823af9053710.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/203913a5-d7c1-4d69-bd1e-823af9053710.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/203913a5-d7c1-4d69-bd1e-823af9053710.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/203913a5-d7c1-4d69-bd1e-823af9053710.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import socket
 import select
 import queue
@@ -29,7 +31,7 @@
 				client.setblocking(0)
 				
 				name = client.recv(20).decode()
-				print("Csatlakozott: ",name.strip(),client_addr)
+				print(("Csatlakozott: ",name.strip(),client_addr))
 				
 				username[client] = name.strip()
 				msg_queue.put( (client, "["+name+"] -LOGIN-") )
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/203913a5-d7c1-4d69-bd1e-823af9053710.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/23a786a1-2706-43cd-9e00-440134f5ad70.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/23a786a1-2706-43cd-9e00-440134f5ad70.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/23a786a1-2706-43cd-9e00-440134f5ad70.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import socket
 
 sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  # ipv4, TCP
@@ -13,10 +15,10 @@
 		print("Varunk...")
 		client_socket, client_addr = sock.accept()
 		
-		print("Csatlakozott: ", client_addr)
+		print(("Csatlakozott: ", client_addr))
 		
 		data = client_socket.recv(16)
-		print("Kaptam:",data.decode())
+		print(("Kaptam:",data.decode()))
 		if data:
 			client_socket.send("Hello Client!".encode())
 		else:
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/23a786a1-2706-43cd-9e00-440134f5ad70.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/254adcca-ab7c-4f79-b583-bb8306568a2a.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/254adcca-ab7c-4f79-b583-bb8306568a2a.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/254adcca-ab7c-4f79-b583-bb8306568a2a.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import struct
 
 string = 'hello'
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/254adcca-ab7c-4f79-b583-bb8306568a2a.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/266c2323-aba1-495e-aa9c-cb4afef7dc23.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/266c2323-aba1-495e-aa9c-cb4afef7dc23.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/266c2323-aba1-495e-aa9c-cb4afef7dc23.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/266c2323-aba1-495e-aa9c-cb4afef7dc23.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import struct
 
@@ -27,7 +29,7 @@
 tpl3 = (44, b"masodik", 63.9)  # str is 11
 tpl4 = (b'Z', 75, b"harmadik")  # str is 14
 
-print(packFormat(tpl1, '13s i ?'))
-print(packFormat(tpl2, 'f ? c'))
-print(packFormat(tpl3, 'i 11s f'))
-print(packFormat(tpl4, 'c i 14s'))
+print((packFormat(tpl1, '13s i ?')))
+print((packFormat(tpl2, 'f ? c')))
+print((packFormat(tpl3, 'i 11s f')))
+print((packFormat(tpl4, 'c i 14s')))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/266c2323-aba1-495e-aa9c-cb4afef7dc23.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/3600297e-0ca2-42ee-831d-e0fbc5706e63.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/3600297e-0ca2-42ee-831d-e0fbc5706e63.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/3600297e-0ca2-42ee-831d-e0fbc5706e63.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/3600297e-0ca2-42ee-831d-e0fbc5706e63.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket,AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 
@@ -17,5 +19,5 @@
 	client.sendall(packed_data)
 	data = client.recv(10).decode()
 	
-	print("Eredmeny a szervertol:",data)
+	print(("Eredmeny a szervertol:",data))
 	
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/3600297e-0ca2-42ee-831d-e0fbc5706e63.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/386e71f1-2902-4791-898e-84e3a5f3e318.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/386e71f1-2902-4791-898e-84e3a5f3e318.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/386e71f1-2902-4791-898e-84e3a5f3e318.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import struct
 
 values = (1, 'ab', 2.7)
@@ -11,7 +13,7 @@
 size2 = packer.size
 unpacked_data = packer.unpack(packed_data)
 
-print("""
+print(("""
 	Struktura
 	
 	Kod:
@@ -31,4 +33,4 @@
 	
 	unpacked_data = packer.unpack(packed_data)
 	print(packed_data)			#""" ,unpacked_data,"""
-	""",'\n')
+	""",'\n'))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/386e71f1-2902-4791-898e-84e3a5f3e318.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/3b853ae2-408b-4cdd-951e-32baae66eeb1.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/3b853ae2-408b-4cdd-951e-32baae66eeb1.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/3b853ae2-408b-4cdd-951e-32baae66eeb1.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/3b853ae2-408b-4cdd-951e-32baae66eeb1.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_DGRAM, timeout
 
 with socket(AF_INET, SOCK_DGRAM) as client:
@@ -7,4 +9,4 @@
 	
 	data, _ = client.recvfrom(1024)
 	
-	print("Kaptam: ",data.decode())
+	print(("Kaptam: ",data.decode()))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/3b853ae2-408b-4cdd-951e-32baae66eeb1.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/405491ff-7c47-446c-a9c4-500205a8d7f0.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/405491ff-7c47-446c-a9c4-500205a8d7f0.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/405491ff-7c47-446c-a9c4-500205a8d7f0.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/405491ff-7c47-446c-a9c4-500205a8d7f0.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import struct, time
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 
@@ -15,10 +17,10 @@
 
 	get_and_send_packet(client)
 	data = client.recv(128).decode()
-	print('answer:', data)
+	print(('answer:', data))
 
 	while True:
 		get_and_send_packet(client)
 		data = client.recv(128).decode()
-		print('answer:', data)
+		print(('answer:', data))
 		if (data == 'TELE'): time.sleep(5)
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/405491ff-7c47-446c-a9c4-500205a8d7f0.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/4085bcb7-0a4e-4f8f-8dc1-9fad91e7e2f4.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/4085bcb7-0a4e-4f8f-8dc1-9fad91e7e2f4.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/4085bcb7-0a4e-4f8f-8dc1-9fad91e7e2f4.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/4085bcb7-0a4e-4f8f-8dc1-9fad91e7e2f4.modernize.py	(refactored)
@@ -1,5 +1,6 @@
 #!/usr/bin/python
 
+from __future__ import absolute_import
 from mininet.net import Mininet
 from mininet.node import Controller, RemoteController, OVSController
 from mininet.node import CPULimitedHost, Host, Node
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/4085bcb7-0a4e-4f8f-8dc1-9fad91e7e2f4.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/40f40a28-8dea-43e5-85ba-9fef7b1467a6.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/40f40a28-8dea-43e5-85ba-9fef7b1467a6.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/40f40a28-8dea-43e5-85ba-9fef7b1467a6.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/40f40a28-8dea-43e5-85ba-9fef7b1467a6.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket,AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 
@@ -12,17 +14,17 @@
 	while True:
 		try:
 			client, client_addr = server.accept()
-			print("Csatlakozott: ", client_addr)
+			print(("Csatlakozott: ", client_addr))
 			
 			data = client.recv(unpacker.size)
-			print("Kaptam:",data)
+			print(("Kaptam:",data))
 			
 			unp_data = unpacker.unpack(data)
-			print("Unpack:",unp_data)
+			print(("Unpack:",unp_data))
 			
 			x = eval(str(unp_data[0])+unp_data[2].decode()+str(unp_data[1]))
 			
-			print("Kiertekeltem es visszakuldtem", x)
+			print(("Kiertekeltem es visszakuldtem", x))
 			client.sendall(str(x).encode())
 		
 		except timeout:
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/40f40a28-8dea-43e5-85ba-9fef7b1467a6.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/416cd004-223b-4cd2-a965-26200eaefe9a.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/416cd004-223b-4cd2-a965-26200eaefe9a.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/416cd004-223b-4cd2-a965-26200eaefe9a.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/416cd004-223b-4cd2-a965-26200eaefe9a.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 
@@ -20,4 +22,4 @@
 	#exit(0)
 	# recieve response
 	data = client.recv(128).decode()
-	print("Result:", data)
+	print(("Result:", data))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/416cd004-223b-4cd2-a965-26200eaefe9a.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/444a0557-e088-43af-abc5-9f091ae4eb00.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/444a0557-e088-43af-abc5-9f091ae4eb00.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/444a0557-e088-43af-abc5-9f091ae4eb00.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/444a0557-e088-43af-abc5-9f091ae4eb00.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import struct, time
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 
@@ -13,7 +15,7 @@
 		packed_data = packer.pack(b'', 0)
 		client.sendall(packed_data)
 		data = client.recv(128).decode()
-		print('answer:', data)
+		print(('answer:', data))
 		if data == 'TELE':
 			packed_data = packer.pack(b'elindultam', 0)
 			client.sendall(packed_data)
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/444a0557-e088-43af-abc5-9f091ae4eb00.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/4ad0fae1-edb5-4347-ab34-ec5c87f01903.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/4ad0fae1-edb5-4347-ab34-ec5c87f01903.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/4ad0fae1-edb5-4347-ab34-ec5c87f01903.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/4ad0fae1-edb5-4347-ab34-ec5c87f01903.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket,AF_INET, SOCK_STREAM
 import select
 import sys
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/4ad0fae1-edb5-4347-ab34-ec5c87f01903.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/4c4a61ce-b0e9-42f4-9fc7-c594b99b0647.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/4c4a61ce-b0e9-42f4-9fc7-c594b99b0647.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/4c4a61ce-b0e9-42f4-9fc7-c594b99b0647.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/4c4a61ce-b0e9-42f4-9fc7-c594b99b0647.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 
@@ -16,5 +18,5 @@
 	client.sendall(packed_data)
 	data = client.recv(10).decode()
 	
-	print("Eredmeny:", data)
+	print(("Eredmeny:", data))
 	
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/4c4a61ce-b0e9-42f4-9fc7-c594b99b0647.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/4fef9cb6-1fd2-4194-9a4e-08636dace2a1.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/4fef9cb6-1fd2-4194-9a4e-08636dace2a1.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/4fef9cb6-1fd2-4194-9a4e-08636dace2a1.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/4fef9cb6-1fd2-4194-9a4e-08636dace2a1.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import socket
 import random
@@ -20,11 +22,11 @@
 	op = ops[nrnd % len(ops)]
 
 	msg = packer.pack(oper1, oper2, op.encode())
-	print( "Üzenet: %d %c %d" % (oper1, op, oper2) )	
+	print(( "Üzenet: %d %c %d" % (oper1, op, oper2) ))	
 	sock.sendall( msg )
 
 	msg = sock.recv(packer.size)
 	parsed_msg = packer.unpack( msg )
-	print( "Kapott eredmény: %d" % parsed_msg[0])
+	print(( "Kapott eredmény: %d" % parsed_msg[0]))
 	time.sleep(2)
 sock.close()
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/4fef9cb6-1fd2-4194-9a4e-08636dace2a1.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/5321fd7a-27f0-4378-b5fd-aa417b693765.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/5321fd7a-27f0-4378-b5fd-aa417b693765.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/5321fd7a-27f0-4378-b5fd-aa417b693765.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/5321fd7a-27f0-4378-b5fd-aa417b693765.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_DGRAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 
@@ -19,4 +21,4 @@
 	client.sendall(packed_data)
 	# recieve response
 	data = client.recv(128).decode()
-	print("Result:", data)
+	print(("Result:", data))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/5321fd7a-27f0-4378-b5fd-aa417b693765.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/5351607c-f401-434e-8e65-05f42fc43c24.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/5351607c-f401-434e-8e65-05f42fc43c24.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/5351607c-f401-434e-8e65-05f42fc43c24.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/5351607c-f401-434e-8e65-05f42fc43c24.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import socket
 import random
@@ -24,11 +26,11 @@
 	op = ops[nrnd % len(ops)]
 
 	msg = packer.pack(oper1, oper2, op.encode())
-	print( "Üzenet: %d %c %d" % (oper1, op, oper2) )	
+	print(( "Üzenet: %d %c %d" % (oper1, op, oper2) ))	
 	sock.sendall( msg )
 
 	msg = sock.recv(packer.size)
 	parsed_msg = packer.unpack( msg )
-	print( "Kapott eredmény: %d" % parsed_msg[0])
+	print(( "Kapott eredmény: %d" % parsed_msg[0]))
 	time.sleep(2)
 sock.close()
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/5351607c-f401-434e-8e65-05f42fc43c24.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/538666d7-6d83-42b3-a841-41604e152dda.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/538666d7-6d83-42b3-a841-41604e152dda.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/538666d7-6d83-42b3-a841-41604e152dda.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/538666d7-6d83-42b3-a841-41604e152dda.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from subprocess import Popen, PIPE
 import os
 import platform
@@ -5,8 +7,8 @@
 import sys
 from time import sleep
 
-print("CPU:", os.cpu_count())
-print("OS:", platform.system())
+print(("CPU:", os.cpu_count()))
+print(("OS:", platform.system()))
 
 availableCores = os.cpu_count()
 maxLevel = int(sys.argv[1])
@@ -17,7 +19,7 @@
 elif platform.system() == "Linux":
 	cmd = 'echo "Linux"'
 else:
-	print("ERROR",platform.system())
+	print(("ERROR",platform.system()))
 	sys.exit(1)
 
 processes = [None]*availableCores # None-nal feltott tomb
@@ -40,7 +42,7 @@
 	if l < maxLevel:
 		for i in range(l+1):
 			levelQueue.put(l+1)
-	print("  "*l,l,res.decode().strip())  #decode = bytes --> string
+	print(("  "*l,l,res.decode().strip()))  #decode = bytes --> string
 	
 runs = 1
 while (runs > 0 or not levelQueue.empty()):
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/538666d7-6d83-42b3-a841-41604e152dda.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/54393d19-d7f9-4fbf-a518-75ac4eff57ef.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/54393d19-d7f9-4fbf-a518-75ac4eff57ef.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/54393d19-d7f9-4fbf-a518-75ac4eff57ef.modernize.py	(refactored)
@@ -1,7 +1,9 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import socket
 
 for i in range(1, 101) :
     try:
-        print(i, ":", socket.getservbyport(i))
+        print((i, ":", socket.getservbyport(i)))
     except OSError:
-        print(i, "nothing")
+        print((i, "nothing"))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/54393d19-d7f9-4fbf-a518-75ac4eff57ef.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/56a17a0a-5858-41be-bac6-2a2319b8cee8.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/56a17a0a-5858-41be-bac6-2a2319b8cee8.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/56a17a0a-5858-41be-bac6-2a2319b8cee8.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/56a17a0a-5858-41be-bac6-2a2319b8cee8.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import struct
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
@@ -9,7 +11,7 @@
 	exit(1)
 
 num = random.randint(1, 100) # random number to guess
-print('number:', num)
+print(('number:', num))
 guessed = False
 guesses = {} # contains the number of guesses per client (client's adress)
 
@@ -34,7 +36,7 @@
 				client, client_addr = s.accept()
 				sockets.append(client)
 				guesses[client_addr] = 0
-				print("Connected:", client_addr)
+				print(("Connected:", client_addr))
 
 			else:
 				data = s.recv(unpacker.size)
@@ -46,9 +48,9 @@
 					print('Client disconnected.')
 				
 				else:
-					print('Recieved:', data)
+					print(('Recieved:', data))
 					unp_data = unpacker.unpack(data)
-					print('Unpack:', unp_data)
+					print(('Unpack:', unp_data))
 					operator, numstring = unp_data[0].decode(), str(unp_data[1])
 					if operator == '=' : operator = '=='
 					l = eval(str(num) + operator + numstring)
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/56a17a0a-5858-41be-bac6-2a2319b8cee8.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/56dd6b8a-cb96-47f4-a63a-eb073e658b17.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/56dd6b8a-cb96-47f4-a63a-eb073e658b17.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/56dd6b8a-cb96-47f4-a63a-eb073e658b17.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import socket
 import sys
 
@@ -12,4 +14,4 @@
 reply = sock.recv(BUFFER_SIZE)
 sock.close()
 
-print("Kapott válasz:", reply.decode())
+print(("Kapott válasz:", reply.decode()))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/56dd6b8a-cb96-47f4-a63a-eb073e658b17.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/57312d79-e299-4aa6-b6ab-ea4134fe6e7e.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/57312d79-e299-4aa6-b6ab-ea4134fe6e7e.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/57312d79-e299-4aa6-b6ab-ea4134fe6e7e.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/57312d79-e299-4aa6-b6ab-ea4134fe6e7e.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from subprocess import PIPE, Popen
 import time
 
@@ -5,6 +7,6 @@
 while p1.poll()==None:
     print(" még fut ")
     time.sleep(1)
-print(p1.communicate())
+print((p1.communicate()))
 
 print('\n')
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/57312d79-e299-4aa6-b6ab-ea4134fe6e7e.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/57b507af-5dce-4bd4-98b2-820bbe78ec28.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/57b507af-5dce-4bd4-98b2-820bbe78ec28.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/57b507af-5dce-4bd4-98b2-820bbe78ec28.modernize.py	(refactored)
@@ -2,9 +2,11 @@
 # File Reading #
 ################
 
+from __future__ import absolute_import
+from __future__ import print_function
 f = open("in.txt", "r")
 
-print(f.read())
+print((f.read()))
 
 #print(f.readline())
 
@@ -26,7 +28,7 @@
 
 import sys
 
-print(sys.argv[0])
+print((sys.argv[0]))
 
 ##################
 # Standard input #
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/57b507af-5dce-4bd4-98b2-820bbe78ec28.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/5cf61176-7a4f-478b-9d70-d62a5453bf9b.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/5cf61176-7a4f-478b-9d70-d62a5453bf9b.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/5cf61176-7a4f-478b-9d70-d62a5453bf9b.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/5cf61176-7a4f-478b-9d70-d62a5453bf9b.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import json
 
@@ -12,7 +14,7 @@
     print('ERROR:\nError while reading file!')
     exit(1)
 else:
-  print('ERROR:\nThis program takes ONE argument (file name)\nNumber of arguments provided: {n}'.format(n = len(sys.argv) - 1))
+  print(('ERROR:\nThis program takes ONE argument (file name)\nNumber of arguments provided: {n}'.format(n = len(sys.argv) - 1)))
   exit(1)
 
 ################################################################################################################################
@@ -53,7 +55,7 @@
     succeeded , reservedLinks = res_links(circuit, d['demand'])       # return values of res_links
     
     if succeeded :
-      event_count += 1; print('{c}. igény foglalás: {sp}<->{ep} st:{t} - sikeres'.format(c = event_count, sp = sp, ep = ep, t = t))
+      event_count += 1; print(('{c}. igény foglalás: {sp}<->{ep} st:{t} - sikeres'.format(c = event_count, sp = sp, ep = ep, t = t)))
       endtime = d['end-time']
       reservations.append({
         'end': endtime,
@@ -61,7 +63,7 @@
         'links': reservedLinks
       })
     else:
-      event_count += 1; print('{c}. igény foglalás: {sp}<->{ep} st:{t} - sikertelen'.format(c = event_count, sp = sp, ep = ep, t = t))  
+      event_count += 1; print(('{c}. igény foglalás: {sp}<->{ep} st:{t} - sikertelen'.format(c = event_count, sp = sp, ep = ep, t = t)))  
   return event_count
 
 def free_circuits(t, event_count):
@@ -72,7 +74,7 @@
       reservations.remove(res)
       sp = res['links'][ 0]['points'][0]
       ep = res['links'][-1]['points'][1]
-      event_count += 1; print('{c}. igény felszabadítás: {sp}<->{ep} st:{t}'.format(c = event_count, sp = sp, ep = ep, t = t))
+      event_count += 1; print(('{c}. igény felszabadítás: {sp}<->{ep} st:{t}'.format(c = event_count, sp = sp, ep = ep, t = t)))
   return event_count
 
 event_count = 0 # purely for printing event numbers to stdout
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/5cf61176-7a4f-478b-9d70-d62a5453bf9b.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/622acb94-2c8a-47fe-8da0-b47e3e0b4ac6.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/622acb94-2c8a-47fe-8da0-b47e3e0b4ac6.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/622acb94-2c8a-47fe-8da0-b47e3e0b4ac6.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/622acb94-2c8a-47fe-8da0-b47e3e0b4ac6.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import struct, hashlib, time
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
@@ -40,7 +42,7 @@
     # receive the response from the checksum server
         response = chsums_server.recv(32).decode()
 
-        print('Received:', response)
+        print(('Received:', response))
 
         parts = response.split('|')
         
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/622acb94-2c8a-47fe-8da0-b47e3e0b4ac6.py

--- /home/peter/Documents/DataSet/resources/scripts/72b0d606-bb15-4a20-98fd-4407ea88bb0c.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/72b0d606-bb15-4a20-98fd-4407ea88bb0c.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import binascii
 import zlib
 
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/72b0d606-bb15-4a20-98fd-4407ea88bb0c.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/7367c7d1-458d-41d2-a3da-5267ca6d5550.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/7367c7d1-458d-41d2-a3da-5267ca6d5550.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/7367c7d1-458d-41d2-a3da-5267ca6d5550.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/7367c7d1-458d-41d2-a3da-5267ca6d5550.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 from select import select
@@ -23,7 +25,7 @@
 				# kliens csatlakozik
 				client, client_addr = s.accept()
 				socketek.append(client)
-				print("Csatlakozott", client_addr)
+				print(("Csatlakozott", client_addr))
 			else:
 				data = s.recv(unpacker.size)
 				# ha 0 byte akkor kilepett a kliens
@@ -32,11 +34,11 @@
 					s.close()
 					print("Kilepett")
 				else:
-					print("Kaptam:", data)
+					print(("Kaptam:", data))
 					unp_data = unpacker.unpack(data)
-					print("Unpack:", unp_data)
+					print(("Unpack:", unp_data))
 					x = eval(str(unp_data[0])+unp_data[2].decode()+str(unp_data[1]))
-					print("Kiertekeltem es visszakuldtem", x)
+					print(("Kiertekeltem es visszakuldtem", x))
 					s.sendall(str(x).encode())
 
 # ZH-n is lehet ezt a szerkezetet hasznalni
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/7367c7d1-458d-41d2-a3da-5267ca6d5550.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/7957d767-97b0-485d-9c28-251b4b11af4a.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/7957d767-97b0-485d-9c28-251b4b11af4a.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/7957d767-97b0-485d-9c28-251b4b11af4a.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/7957d767-97b0-485d-9c28-251b4b11af4a.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 from select import select
 import struct
@@ -32,7 +34,7 @@
 		for s in r:
 			if s is server:
 				client, client_addr = s.accept()
-				print("Connected:", client_addr)
+				print(("Connected:", client_addr))
 				sockets.append(client)
 			else:
 				data = s.recv(packer.size)
@@ -41,13 +43,13 @@
 					sockets.remove(s)
 					s.close()
 				else:
-					print("Recieved:", data)
+					print(("Recieved:", data))
 					unpacked_data = packer.unpack(data)
-					print("Unpacked data:", unpacked_data)
+					print(("Unpacked data:", unpacked_data))
 					
 					x , y , h, m = unpacked_data
-					print("x =",x,"y =", y)
-					print("@",h,":",m)
+					print(("x =",x,"y =", y))
+					print(("@",h,":",m))
 					res = search_map_data(x,y,h,m)
 					res = str(res)
 					s.sendall(res.encode())
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/7957d767-97b0-485d-9c28-251b4b11af4a.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/7c03ccb2-552c-4b09-a47a-5d62a139629e.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/7c03ccb2-552c-4b09-a47a-5d62a139629e.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/7c03ccb2-552c-4b09-a47a-5d62a139629e.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/7c03ccb2-552c-4b09-a47a-5d62a139629e.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import struct
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/7c03ccb2-552c-4b09-a47a-5d62a139629e.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/83afbbf9-e1b7-4fca-b02c-a3e262ec994d.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/83afbbf9-e1b7-4fca-b02c-a3e262ec994d.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/83afbbf9-e1b7-4fca-b02c-a3e262ec994d.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import hashlib
 
 with open('adat.txt', 'rb') as f:
@@ -9,6 +11,6 @@
     hexd = hash.hexdigest()
     size = hash.digest_size
 
-    print(hexd, 'length:', size)
+    print((hexd, 'length:', size))
 
 
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/83afbbf9-e1b7-4fca-b02c-a3e262ec994d.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/85060d78-367e-4111-a51f-086858c977c1.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/85060d78-367e-4111-a51f-086858c977c1.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/85060d78-367e-4111-a51f-086858c977c1.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/85060d78-367e-4111-a51f-086858c977c1.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM
 import sys
 
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/85060d78-367e-4111-a51f-086858c977c1.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/8550d211-6411-4c0a-bcf1-23c0340346a9.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/8550d211-6411-4c0a-bcf1-23c0340346a9.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/8550d211-6411-4c0a-bcf1-23c0340346a9.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/8550d211-6411-4c0a-bcf1-23c0340346a9.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_DGRAM, timeout
 import struct
 import random
@@ -26,10 +28,10 @@
 			
 			unpacked_data = packer.unpack(data)
 
-			print("recieved:", unpacked_data, "from:", client)
+			print(("recieved:", unpacked_data, "from:", client))
 			x, y, h, m = unpacked_data
-			print("x =",x,"y =",y)
-			print("@",h,":",m)
+			print(("x =",x,"y =",y))
+			print(("@",h,":",m))
 			
 			res = search_map_data(x,y,h,m)
 			res = str(res)
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/8550d211-6411-4c0a-bcf1-23c0340346a9.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/89f03e63-6d16-4804-b426-e65c0165105f.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/89f03e63-6d16-4804-b426-e65c0165105f.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/89f03e63-6d16-4804-b426-e65c0165105f.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/89f03e63-6d16-4804-b426-e65c0165105f.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import struct, hashlib
 from socket import socket, AF_INET, SOCK_STREAM
@@ -20,7 +22,7 @@
         
         hash = hashlib.md5(file_content)
         size = hash.digest_size; hexd = hash.hexdigest()
-        print('hash:', hexd, 'length:', size)
+        print(('hash:', hexd, 'length:', size))
 
     with socket(AF_INET, SOCK_STREAM) as chsum_client:
         chsum_client.connect(chsums_addr)
@@ -29,4 +31,4 @@
         chsum_client.sendall(message.encode())
         data = chsum_client.recv(10).decode()
 
-        print('Received from checksum server:', data)
+        print(('Received from checksum server:', data))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/89f03e63-6d16-4804-b426-e65c0165105f.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/8aca5ff7-c8c8-48c4-ab42-cd057d04be5f.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/8aca5ff7-c8c8-48c4-ab42-cd057d04be5f.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/8aca5ff7-c8c8-48c4-ab42-cd057d04be5f.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/8aca5ff7-c8c8-48c4-ab42-cd057d04be5f.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import json
 import struct
@@ -13,7 +15,7 @@
     client.sendall(packed_data)
             
     data = client.recv(16).decode()
-    print("result:", data)
+    print(("result:", data))
 
     parts = data.split("|")
     if parts[1] == 'sikeres': print('sikeres foglalás')
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/8aca5ff7-c8c8-48c4-ab42-cd057d04be5f.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/8b78cc55-2ad9-4890-b249-cd7bf673572b.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/8b78cc55-2ad9-4890-b249-cd7bf673572b.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/8b78cc55-2ad9-4890-b249-cd7bf673572b.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/8b78cc55-2ad9-4890-b249-cd7bf673572b.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM
 
 server_addr = ('localhost',10000)
@@ -9,6 +11,6 @@
 client.sendall("Hello Server!".encode())
 
 data = client.recv(16)
-print("Kaptam:",data.decode())
+print(("Kaptam:",data.decode()))
 
 client.close()
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/8b78cc55-2ad9-4890-b249-cd7bf673572b.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/8b9a81c9-a7d2-4923-ad29-be8bf001b259.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/8b9a81c9-a7d2-4923-ad29-be8bf001b259.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/8b9a81c9-a7d2-4923-ad29-be8bf001b259.modernize.py	(refactored)
@@ -1,6 +1,8 @@
 
 #socket_multicast_sender.py
 
+from __future__ import absolute_import
+from __future__ import print_function
 import socket
 import struct
 import sys
@@ -23,7 +25,7 @@
 try:
 
     # Send data to the multicast group
-    print('sending {!r}'.format(message))
+    print(('sending {!r}'.format(message)))
     sent = sock.sendto(message, multicast_group)
 
     # Look for responses from all recipients
@@ -35,8 +37,8 @@
             print('timed out, no more responses')
             break
         else:
-            print('received {!r} from {}'.format(
-                data, server))
+            print(('received {!r} from {}'.format(
+                data, server)))
 
 finally:
     print('closing socket')
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/8b9a81c9-a7d2-4923-ad29-be8bf001b259.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/8c004c6b-3617-44c5-b306-38f947eadcae.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/8c004c6b-3617-44c5-b306-38f947eadcae.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/8c004c6b-3617-44c5-b306-38f947eadcae.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/8c004c6b-3617-44c5-b306-38f947eadcae.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket,AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 from select import select
@@ -23,7 +25,7 @@
 				# kliens csatlakozik
 				client, client_addr = s.accept()
 				socketek.append(client)
-				print("Csatlakozott", client_addr)
+				print(("Csatlakozott", client_addr))
 			else:
 				data = s.recv(unpacker.size)
 				# ha 0 byte akkor kilepett a kliens
@@ -32,10 +34,10 @@
 					s.close()
 					print("Kilepett")
 				else:
-					print("Kaptam:",data)
+					print(("Kaptam:",data))
 					unp_data = unpacker.unpack(data)
-					print("Unpack:",unp_data)
+					print(("Unpack:",unp_data))
 					x = eval(str(unp_data[0])+unp_data[2].decode()+str(unp_data[1]))
-					print("Kiertekeltem es visszakuldtem", x)
+					print(("Kiertekeltem es visszakuldtem", x))
 					msg = unpacker.pack(x, 0, b'R')
 					s.sendall(msg)
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/8c004c6b-3617-44c5-b306-38f947eadcae.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/95154280-ee22-4d31-9b66-c44b5639afce.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/95154280-ee22-4d31-9b66-c44b5639afce.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/95154280-ee22-4d31-9b66-c44b5639afce.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/95154280-ee22-4d31-9b66-c44b5639afce.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM, SOL_SOCKET, SO_REUSEADDR, timeout
 from select import select
 import struct
@@ -23,7 +25,7 @@
 				# kliens csatlakozik
 				client, client_addr = s.accept()
 				socketek.append(client)
-				print("Csatlakozott", client_addr)
+				print(("Csatlakozott", client_addr))
 			else:
 				data = s.recv(unpacker.size)
 				# ha 0 byte akkor kilepett a kliens
@@ -32,9 +34,9 @@
 					s.close()
 					print("Kilepett")
 				else:
-					print("Kaptam:", data)
+					print(("Kaptam:", data))
 					unpacked_data = unpacker.unpack(data)
-					print("Unpack:", unpacked_data)
+					print(("Unpack:", unpacked_data))
 					x = eval(str(unpacked_data[0])+unpacked_data[2].decode()+str(unpacked_data[1]))
-					print("Kiértékeltem és visszaküldtem", x)
+					print(("Kiértékeltem és visszaküldtem", x))
 					s.sendall(str(x).encode())
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/95154280-ee22-4d31-9b66-c44b5639afce.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/96c52e8a-0747-4681-8f80-5ba99bdcec26.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/96c52e8a-0747-4681-8f80-5ba99bdcec26.isort.py

>> No changes needed for /home/peter/Documents/DataSet/resources/scripts/96c52e8a-0747-4681-8f80-5ba99bdcec26.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/96d65f95-e9fb-49f0-b8d1-ee899ef95e35.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/96d65f95-e9fb-49f0-b8d1-ee899ef95e35.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/96d65f95-e9fb-49f0-b8d1-ee899ef95e35.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/96d65f95-e9fb-49f0-b8d1-ee899ef95e35.modernize.py	(refactored)
@@ -1,11 +1,13 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from subprocess import Popen, PIPE
 import os
 import platform
 import sys
 from time import sleep
 
-print("CPU:", os.cpu_count())
-print("OS:", platform.system())
+print(("CPU:", os.cpu_count()))
+print(("OS:", platform.system()))
 
 availableCore = os.cpu_count()
 
@@ -15,7 +17,7 @@
 elif platform.system() == "Linux":
     cmd = 'echo "Linux"'
 else:
-    print("ERROR",platform.system())
+    print(("ERROR",platform.system()))
     sys.exit(1)
 
 process = []
@@ -24,7 +26,7 @@
     p = Popen(cmd, stdout=PIPE, stderr=PIPE, shell=True)
     process.append(p)
 
-print('Futtattott processek szama:',len(process))
+print(('Futtattott processek szama:',len(process)))
 
 ures = False
 while (not ures):
@@ -36,11 +38,11 @@
                 fut += 1
             else:
                 res,err = p.communicate()
-                print('Process ' + str(i+1) + ' : ' + res.decode().strip())
+                print(('Process ' + str(i+1) + ' : ' + res.decode().strip()))
                 process[i] = None
         i += 1
     if (fut > 0):
         sleep(1)
     else:
-        print('Lefutott processek szama:', i)
+        print(('Lefutott processek szama:', i))
         ures = True
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/96d65f95-e9fb-49f0-b8d1-ee899ef95e35.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/9bcb9547-754b-4f62-b949-04fd4c4b14a0.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/9bcb9547-754b-4f62-b949-04fd4c4b14a0.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/9bcb9547-754b-4f62-b949-04fd4c4b14a0.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/9bcb9547-754b-4f62-b949-04fd4c4b14a0.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import socket
 #import sys
 
@@ -11,11 +13,11 @@
 sock.listen(1)
 
 conn, addr = sock.accept()
-print('Valaki csatlakozott:', addr)
+print(('Valaki csatlakozott:', addr))
 while True:
     data = conn.recv(BUFFER_SIZE)
     if not data: break
-    print("Beérkező üzenet:", data.decode())
+    print(("Beérkező üzenet:", data.decode()))
     conn.send(reply)
 conn.close()
 sock.close()
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/9bcb9547-754b-4f62-b949-04fd4c4b14a0.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/9e49fddc-ee7e-4616-b2c3-91dde9fb559a.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/9e49fddc-ee7e-4616-b2c3-91dde9fb559a.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/9e49fddc-ee7e-4616-b2c3-91dde9fb559a.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/9e49fddc-ee7e-4616-b2c3-91dde9fb559a.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_DGRAM, timeout
 import struct
 
@@ -18,7 +20,7 @@
 
             decoded_data = data.decode()
 
-            print("recieved:", decoded_data, "from:", client)
+            print(("recieved:", decoded_data, "from:", client))
             strings = decoded_data.split(';')
             to_send = packer.pack(
 						int(strings[0]),
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/9e49fddc-ee7e-4616-b2c3-91dde9fb559a.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/a308c40f-dc69-473f-bdfb-1b26ceb47afe.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/a308c40f-dc69-473f-bdfb-1b26ceb47afe.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/a308c40f-dc69-473f-bdfb-1b26ceb47afe.modernize.py	(refactored)
@@ -1,3 +1,4 @@
+from __future__ import print_function
 def isLeapYear (year):
     if year % 100 == 0 :
         return year % 400 == 0
@@ -6,8 +7,8 @@
 with open("years.txt", "r") as f :
     for x in f:
         x = x.rstrip()
-        if isLeapYear(int(x)) : print(x + " is a leap year.")
-        else                  : print(x + " is not a leap year.")
+        if isLeapYear(int(x)) : print((x + " is a leap year."))
+        else                  : print((x + " is not a leap year."))
 
 """
 f = open("years.txt", "r")
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/a308c40f-dc69-473f-bdfb-1b26ceb47afe.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/a9b593f5-e3b3-44d5-8559-d6cc6d6e2c66.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/a9b593f5-e3b3-44d5-8559-d6cc6d6e2c66.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/a9b593f5-e3b3-44d5-8559-d6cc6d6e2c66.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/a9b593f5-e3b3-44d5-8559-d6cc6d6e2c66.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 import random
@@ -11,7 +13,7 @@
 	for i in range(10) :
 		time.sleep(2)
 
-		print('\n(', i, ') művelet:\n')
+		print(('\n(', i, ') művelet:\n'))
 
 		szam1 = random.randint(1, 100) # input("Adj meg egy szamot:")
 		szam2 = random.randint(1, 100) # input("Adj meg masik szamot:")
@@ -23,5 +25,5 @@
 		client.sendall(packed_data)
 		data = client.recv(10).decode()
 	
-		print("Eredmény:", data)
+		print(("Eredmény:", data))
 # close socket
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/a9b593f5-e3b3-44d5-8559-d6cc6d6e2c66.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/ad0590a0-e963-413a-a6b1-85bedcf1ffb5.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/ad0590a0-e963-413a-a6b1-85bedcf1ffb5.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/ad0590a0-e963-413a-a6b1-85bedcf1ffb5.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/ad0590a0-e963-413a-a6b1-85bedcf1ffb5.modernize.py	(refactored)
@@ -1,7 +1,9 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import subprocess
 
 p = subprocess.Popen(["echo", "hello world"], shell = True, stdout=subprocess.PIPE)
-print(p.communicate())
+print((p.communicate()))
 
 print('\n')
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/ad0590a0-e963-413a-a6b1-85bedcf1ffb5.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/ae6ec04b-7c0b-4ae1-8225-2cc618c1e089.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/ae6ec04b-7c0b-4ae1-8225-2cc618c1e089.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/ae6ec04b-7c0b-4ae1-8225-2cc618c1e089.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/ae6ec04b-7c0b-4ae1-8225-2cc618c1e089.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import struct, hashlib, time
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
@@ -45,7 +47,7 @@
                 # kliens csatlakozik
                 client, client_addr = s.accept()
                 socketek.append(client)
-                print("Client connected.", client_addr)
+                print(("Client connected.", client_addr))
             else:
                 data = s.recv(32)
                 # ha 0 byte akkor kilepett a kliens
@@ -54,7 +56,7 @@
                     s.close()
                     print("Client left.")
                 else:
-                    print("Received:", data)
+                    print(("Received:", data))
                     decoded_data = data.decode()
 
                     parts = decoded_data.split('|')
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/ae6ec04b-7c0b-4ae1-8225-2cc618c1e089.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/b3fabd46-259c-47ff-813e-7009692be504.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/b3fabd46-259c-47ff-813e-7009692be504.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/b3fabd46-259c-47ff-813e-7009692be504.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/b3fabd46-259c-47ff-813e-7009692be504.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 from socket import socket,AF_INET, SOCK_STREAM
 import select
@@ -39,7 +41,7 @@
 					s.close()
 					print("Kilepett")
 				else:
-					print("Kaptam:", data)
+					print(("Kaptam:", data))
 					unp_data = packer.unpack(data)
 					unp_data[0] *= 2
 					unp_data[1] += 1
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/b3fabd46-259c-47ff-813e-7009692be504.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/bb4d7963-b7e8-49bc-b69b-7560a19b5955.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/bb4d7963-b7e8-49bc-b69b-7560a19b5955.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/bb4d7963-b7e8-49bc-b69b-7560a19b5955.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/bb4d7963-b7e8-49bc-b69b-7560a19b5955.modernize.py	(refactored)
@@ -1,5 +1,6 @@
 #!/usr/bin/python
 
+from __future__ import absolute_import
 from mininet.net import Mininet
 from mininet.node import Controller, RemoteController, OVSController
 from mininet.node import CPULimitedHost, Host, Node
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/bb4d7963-b7e8-49bc-b69b-7560a19b5955.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/c04bf75f-ad3b-4a38-99bb-29ac07f0a5da.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/c04bf75f-ad3b-4a38-99bb-29ac07f0a5da.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/c04bf75f-ad3b-4a38-99bb-29ac07f0a5da.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/c04bf75f-ad3b-4a38-99bb-29ac07f0a5da.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import subprocess
 subprocess.call(['dir', '/B'], shell=True) 
 
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/c04bf75f-ad3b-4a38-99bb-29ac07f0a5da.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/cc0bdde1-355f-4c2b-957f-f56df2b89fe2.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/cc0bdde1-355f-4c2b-957f-f56df2b89fe2.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/cc0bdde1-355f-4c2b-957f-f56df2b89fe2.modernize.py	(refactored)
@@ -1,4 +1,6 @@
 #!/usr/bin/env python3
+from __future__ import absolute_import
+from __future__ import print_function
 from subprocess import PIPE, Popen
 from time import sleep
 
@@ -16,7 +18,7 @@
             if process[i].poll() == None:
                 fut += 1
             else:
-                print(p.communicate())
+                print((p.communicate()))
                 process[i] = None
         i += 1
     if (fut > 0):
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/cc0bdde1-355f-4c2b-957f-f56df2b89fe2.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/d139a73c-1957-4d2b-9e9b-54f68efba5ad.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/d139a73c-1957-4d2b-9e9b-54f68efba5ad.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/d139a73c-1957-4d2b-9e9b-54f68efba5ad.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/d139a73c-1957-4d2b-9e9b-54f68efba5ad.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_DGRAM, timeout
 
 with socket(AF_INET, SOCK_DGRAM) as server:
@@ -10,7 +12,7 @@
 		try:
 			data, client = server.recvfrom(1024)
 
-			print("Kaptam", data.decode(),"tole:",client)
+			print(("Kaptam", data.decode(),"tole:",client))
 
 			server.sendto("Hello kliens!".encode(), client)
 		except timeout:
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/d139a73c-1957-4d2b-9e9b-54f68efba5ad.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/d586e19e-b0a6-4e84-bf19-b80c3eddf5bc.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/d586e19e-b0a6-4e84-bf19-b80c3eddf5bc.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/d586e19e-b0a6-4e84-bf19-b80c3eddf5bc.modernize.py	(refactored)
@@ -1,7 +1,9 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import socket
 
 for i in range(1,101):
     try:
-        print(i,":",socket.getservbyport(i))
+        print((i,":",socket.getservbyport(i)))
     except OSError:
-        print(i,": nincs tartozik hozzá semmi")
+        print((i,": nincs tartozik hozzá semmi"))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/d586e19e-b0a6-4e84-bf19-b80c3eddf5bc.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/d9d80b7e-2494-4e28-a4d7-681df377a1e3.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/d9d80b7e-2494-4e28-a4d7-681df377a1e3.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/d9d80b7e-2494-4e28-a4d7-681df377a1e3.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/d9d80b7e-2494-4e28-a4d7-681df377a1e3.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from subprocess import Popen, PIPE
 from time import sleep
 import json
@@ -10,7 +12,7 @@
     p = Popen("ping " + url, stdout=PIPE, stderr=PIPE)
     processes.append(p)
 
-print('Number of processes started:',len(processes))
+print(('Number of processes started:',len(processes)))
 
 processes_dictionary = []
 
@@ -36,7 +38,7 @@
     if (runs > 0):
         sleep(1)
     else:
-        print('Processes finished: ', i)
+        print(('Processes finished: ', i))
         empty = True
 
 json_result = json.dumps(processes_dictionary, indent=2)
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/d9d80b7e-2494-4e28-a4d7-681df377a1e3.py

--- /home/peter/Documents/DataSet/resources/scripts/dbce0130-3a6d-41fc-a2b9-0f43f5829b90.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/dbce0130-3a6d-41fc-a2b9-0f43f5829b90.modernize.py	(refactored)
@@ -1,13 +1,15 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import hashlib
 
 m = hashlib.md5('Nobody expects'.encode())
 m.update(b' the spanish inquisition')
-print("Digest: {}".format(m.digest()))
-print("Digest in hex: 0x{}".format(m.hexdigest()))
-print("Digest size: {}".format(m.digest_size))
+print(("Digest: {}".format(m.digest())))
+print(("Digest in hex: 0x{}".format(m.hexdigest())))
+print(("Digest size: {}".format(m.digest_size)))
 
 another = hashlib.md5(b'Nobody expects the spanish inquisition')
-print("\nAnother Digest : {}".format(another.digest()))
+print(("\nAnother Digest : {}".format(another.digest())))
 
 yetAnother = hashlib.md5(b'Kecske')
-print("\nyetAnother Digest size: {}".format(yetAnother.digest_size))
+print(("\nyetAnother Digest size: {}".format(yetAnother.digest_size)))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/dbce0130-3a6d-41fc-a2b9-0f43f5829b90.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/e07da993-6973-4eea-9b56-9f94d1c3eaeb.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/e07da993-6973-4eea-9b56-9f94d1c3eaeb.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/e07da993-6973-4eea-9b56-9f94d1c3eaeb.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/e07da993-6973-4eea-9b56-9f94d1c3eaeb.modernize.py	(refactored)
@@ -1,4 +1,5 @@
 #!/usr/bin/python
+from __future__ import absolute_import
 from mininet.net import Mininet
 from mininet.cli import CLI
 from mininet.link import Link, TCLink, Intf
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/e07da993-6973-4eea-9b56-9f94d1c3eaeb.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/e4c59d06-db8a-48b1-94d2-9877753044e5.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/e4c59d06-db8a-48b1-94d2-9877753044e5.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/e4c59d06-db8a-48b1-94d2-9877753044e5.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/e4c59d06-db8a-48b1-94d2-9877753044e5.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket,AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 
@@ -17,5 +19,5 @@
 	client.sendall(packed_data)
 	data = client.recv(10).decode()
 	
-	print("Eredmeny a szervertol:", data)
+	print(("Eredmeny a szervertol:", data))
 	
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/e4c59d06-db8a-48b1-94d2-9877753044e5.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/e61ada5d-3571-449e-a377-6809a65510af.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/e61ada5d-3571-449e-a377-6809a65510af.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/e61ada5d-3571-449e-a377-6809a65510af.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/e61ada5d-3571-449e-a377-6809a65510af.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_DGRAM, timeout
 import struct
 
@@ -18,4 +20,4 @@
 	
 	data, _ = client.recvfrom(1024)
 	
-	print("Kaptam: ",data.decode())
+	print(("Kaptam: ",data.decode()))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/e61ada5d-3571-449e-a377-6809a65510af.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/e66eb747-baa9-492e-bfc0-43d3ae63ce1a.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/e66eb747-baa9-492e-bfc0-43d3ae63ce1a.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/e66eb747-baa9-492e-bfc0-43d3ae63ce1a.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/e66eb747-baa9-492e-bfc0-43d3ae63ce1a.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM
 import sys
 
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/e66eb747-baa9-492e-bfc0-43d3ae63ce1a.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/ea7c6809-78e3-4250-ab64-547c32fde5b2.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/ea7c6809-78e3-4250-ab64-547c32fde5b2.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/ea7c6809-78e3-4250-ab64-547c32fde5b2.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/ea7c6809-78e3-4250-ab64-547c32fde5b2.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import struct
 packer = struct.Struct('i3si')
 with open('dates.bin', 'wb') as f: # wb - write binary
@@ -9,6 +11,6 @@
 with open('dates.bin', 'rb') as f: # rb - read as binary
     f.seek(packer.size*4)
     data = f.read(packer.size)
-    print(packer.unpack(data))
+    print((packer.unpack(data)))
 
 ### output: (2024, b'jan’, 14)
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/ea7c6809-78e3-4250-ab64-547c32fde5b2.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/ebb16ec0-d44c-46cb-bf4d-878c188a3a73.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/ebb16ec0-d44c-46cb-bf4d-878c188a3a73.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/ebb16ec0-d44c-46cb-bf4d-878c188a3a73.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/ebb16ec0-d44c-46cb-bf4d-878c188a3a73.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 from select import select
 import struct
@@ -25,7 +27,7 @@
 				# kliens csatlakozik
 				client, client_addr = s.accept()
 				sockets.append(client)
-				print("Connected:", client_addr)
+				print(("Connected:", client_addr))
 			else:
 				data = s.recv(unpacker.size)
 				# ha 0 byte akkor kilepett a kliens
@@ -34,14 +36,14 @@
 					s.close()
 					print("Left.")
 				else:
-					print("Recieved:", data)
+					print(("Recieved:", data))
 					santa_started = unpacker.pack(b'elindultam', 0)
 					if data == santa_started: weight = 0
 
 					unp_data = unpacker.unpack(data)
 					
-					print("Unpacked weight:", unp_data[1])
-					print("Total weight:", weight)
+					print(("Unpacked weight:", unp_data[1]))
+					print(("Total weight:", weight))
 					
 					weight += unp_data[1]
 					if weight >= 15: s.sendall(b"TELE")
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/ebb16ec0-d44c-46cb-bf4d-878c188a3a73.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/eded382d-9a0c-4a5b-beaa-2d06d369953a.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/eded382d-9a0c-4a5b-beaa-2d06d369953a.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/eded382d-9a0c-4a5b-beaa-2d06d369953a.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/eded382d-9a0c-4a5b-beaa-2d06d369953a.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import sys
 import socket
 import struct
@@ -19,6 +21,6 @@
 reply = sock.recv(BUFFER_SIZE)
 sock.close()
 
-print("Kapott válasz:", reply.decode())
+print(("Kapott válasz:", reply.decode()))
 
 # szebb megoldas: calcClient
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/eded382d-9a0c-4a5b-beaa-2d06d369953a.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/edfadf2b-c196-4399-9aed-b9d9307dffc6.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/edfadf2b-c196-4399-9aed-b9d9307dffc6.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/edfadf2b-c196-4399-9aed-b9d9307dffc6.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/edfadf2b-c196-4399-9aed-b9d9307dffc6.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 from select import select
@@ -23,7 +25,7 @@
 				# kliens csatlakozik
 				client, client_addr = s.accept()
 				socketek.append(client)
-				print("Csatlakozott", client_addr)
+				print(("Csatlakozott", client_addr))
 			else:
 				data = s.recv(unpacker.size)
 				# ha 0 byte akkor kilepett a kliens
@@ -32,11 +34,11 @@
 					s.close()
 					print("Kilepett")
 				else:
-					print("Kaptam:", data)
+					print(("Kaptam:", data))
 					unp_data = unpacker.unpack(data)
-					print("Unpack:", unp_data)
+					print(("Unpack:", unp_data))
 					x = eval(str(unp_data[0])+unp_data[2].decode()+str(unp_data[1]))
-					print("Kiertekeltem es visszakuldtem", x)
+					print(("Kiertekeltem es visszakuldtem", x))
 					s.sendall(str(x).encode())
 
 # ZH-n is lehet ezt a szerkezetet hasznalni
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/edfadf2b-c196-4399-9aed-b9d9307dffc6.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/f2a8a634-0040-4c5e-853f-01b7552999b3.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/f2a8a634-0040-4c5e-853f-01b7552999b3.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/f2a8a634-0040-4c5e-853f-01b7552999b3.modernize.py	(refactored)
@@ -1,4 +1,6 @@
 #import sys
+from __future__ import absolute_import
+from __future__ import print_function
 import socket
 import struct
 
@@ -28,14 +30,14 @@
     return 'operator not recognized'
 
 conn, addr = sock.accept()
-print('Valaki csatlakozott:', addr)
+print(('Valaki csatlakozott:', addr))
 while True:
     data = conn.recv(BUFFER_SIZE)
     if not data: break
     packer = struct.Struct('f 1s f')
     size = packer.size
     unpacked_data = packer.unpack(data)
-    print("Beérkező üzenet:", unpacked_data)
+    print(("Beérkező üzenet:", unpacked_data))
     result = calc_result(unpacked_data)
     conn.send(str(result).encode())
 
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/f2a8a634-0040-4c5e-853f-01b7552999b3.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/f71213fe-2792-48ba-bfce-783a1a31b0dc.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/f71213fe-2792-48ba-bfce-783a1a31b0dc.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/f71213fe-2792-48ba-bfce-783a1a31b0dc.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/f71213fe-2792-48ba-bfce-783a1a31b0dc.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import json
 import struct
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
@@ -9,7 +11,7 @@
 
 if not json_dict: exit(1)
 
-print('data:', json_dict)
+print(('data:', json_dict))
 
 server_addr = ('localhost', 10000)
 packer = struct.Struct('I')
@@ -32,7 +34,7 @@
                 # kliens csatlakozik
                 client, client_addr = s.accept()
                 socketek.append(client)
-                print("Client connected:", client_addr)
+                print(("Client connected:", client_addr))
             else:
                 data = s.recv(packer.size)
                 # ha 0 byte akkor kilepett a kliens
@@ -41,25 +43,25 @@
                     s.close()
                     print("Client left.")
                 else:
-                    print("Recieved:", data)
+                    print(("Recieved:", data))
                     unpacked_data = packer.unpack(data)
                     
-                    print("Unpacked:", unpacked_data)
+                    print(("Unpacked:", unpacked_data))
                     number = unpacked_data[0]
 
-                    print(json_dict[str(number)])
+                    print((json_dict[str(number)]))
                     
                     key = str(number)
                     if not key in json_dict.keys():
                         result = "{0}|sikertelen".format(number)
                         s.sendall(result.encode())
-                        print(number, 'hely nem szerepel az adatok közt.')
+                        print((number, 'hely nem szerepel az adatok közt.'))
                     elif json_dict[key] == 'szabad':
                         json_dict[key] = 'foglalt'
                         result = "{0}|sikeres".format(number)
                         s.sendall(result.encode())
-                        print(number, 'helyen foglalás történt.')
+                        print((number, 'helyen foglalás történt.'))
                     else:
                         result = "{0}|sikertelen".format(number)
                         s.sendall(result.encode())
-                        print(number, 'heyen a foglalás sikertelen.')
+                        print((number, 'heyen a foglalás sikertelen.'))
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/f71213fe-2792-48ba-bfce-783a1a31b0dc.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/f8ecb260-30c8-452c-9572-0ba2de3f6f31.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/f8ecb260-30c8-452c-9572-0ba2de3f6f31.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/f8ecb260-30c8-452c-9572-0ba2de3f6f31.modernize.py	(refactored)
@@ -1,8 +1,10 @@
+from __future__ import absolute_import
+from __future__ import print_function
 import struct
 import sys
 
 if len(sys.argv) <2:
-	print("Usage example: python",sys.argv[0],"9sif?c")
+	print(("Usage example: python",sys.argv[0],"9sif?c"))
 	exit(1)
 
 headerInfo= {'s':b'987654321','i':42,'f':128.16,'?':True,'c':b'H'}
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/f8ecb260-30c8-452c-9572-0ba2de3f6f31.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/f9de58dc-6b24-4b81-bf40-a13fde1d178c.autopep.py

--- /home/peter/Documents/DataSet/resources/scripts/f9de58dc-6b24-4b81-bf40-a13fde1d178c.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/f9de58dc-6b24-4b81-bf40-a13fde1d178c.modernize.py	(refactored)
@@ -1,8 +1,9 @@
+from __future__ import print_function
 with open('alma.txt', 'r') as f:
     sor = f.readline()
-    print('jelenlegi sor', sor) # jelenlegi sor 1. sor
+    print(('jelenlegi sor', sor)) # jelenlegi sor 1. sor
     sor = f.readline()
-    print('jelenlegi sor', sor) # jelenlegi sor 2. sor
+    print(('jelenlegi sor', sor)) # jelenlegi sor 2. sor
     f.seek(0, 0) # f.seek(offset, whence)
     sor = f.readline()
-    print('jelenlegi sor', sor) # jelenlegi sor 1. sor
+    print(('jelenlegi sor', sor)) # jelenlegi sor 1. sor
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/f9de58dc-6b24-4b81-bf40-a13fde1d178c.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/fc2958d6-3ff7-4722-a18f-ce501d90c5de.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/fc2958d6-3ff7-4722-a18f-ce501d90c5de.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/fc2958d6-3ff7-4722-a18f-ce501d90c5de.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/fc2958d6-3ff7-4722-a18f-ce501d90c5de.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM
 import select, struct
 
@@ -8,10 +10,10 @@
 
 def sabotage(original):
 	sabotageData = list(packer.unpack(original))
-	print("Eredeti üzenete:",sabotageData)
+	print(("Eredeti üzenete:",sabotageData))
 	sabotageData[0] = sabotageData[0]*2
 	sabotageData[1] = sabotageData[1]+1
-	print("Szabotált üzenete:",sabotageData)
+	print(("Szabotált üzenete:",sabotageData))
 	reply = packer.pack(*tuple(sabotageData))
 	return reply
 
@@ -32,7 +34,7 @@
 		for s in r:
 			if s is proxy:
 				client, client_addr = s.accept()
-				print("Kliens csatlakozott ",client_addr)
+				print(("Kliens csatlakozott ",client_addr))
 				inputs.append(client)
 			else:
 				data = s.recv(9)
@@ -45,5 +47,5 @@
 					sData = sabotage(data)
 					serverSock.sendto(sData,server_addr)
 					respData, _ = serverSock.recvfrom(200)
-					print("Szerver válasza:", respData)
+					print(("Szerver válasza:", respData))
 					s.sendall(respData)
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/fc2958d6-3ff7-4722-a18f-ce501d90c5de.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/fc704449-81ac-4b6a-affc-29547c94be5b.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/fc704449-81ac-4b6a-affc-29547c94be5b.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/fc704449-81ac-4b6a-affc-29547c94be5b.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/fc704449-81ac-4b6a-affc-29547c94be5b.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_STREAM, timeout, SOL_SOCKET, SO_REUSEADDR
 import struct
 
@@ -17,5 +19,5 @@
 	client.sendall(packed_data)
 	data = client.recv(10).decode()
 	
-	print("Eredmeny:", data)
+	print(("Eredmeny:", data))
 	
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/fc704449-81ac-4b6a-affc-29547c94be5b.py

>> Skipping already autopepped file: /home/peter/Documents/DataSet/resources/scripts/ffab3717-a169-4762-9736-328d186d9789.autopep.py

>> Skipping already isorted file: /home/peter/Documents/DataSet/resources/scripts/ffab3717-a169-4762-9736-328d186d9789.isort.py

--- /home/peter/Documents/DataSet/resources/scripts/ffab3717-a169-4762-9736-328d186d9789.modernize.py	(original)
+++ /home/peter/Documents/DataSet/resources/scripts/ffab3717-a169-4762-9736-328d186d9789.modernize.py	(refactored)
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+from __future__ import print_function
 from socket import socket, AF_INET, SOCK_DGRAM, timeout
 import struct
 
@@ -15,7 +17,7 @@
 			
 			unpacked_data = packer.unpack(data)
 
-			print("Kaptam", unpacked_data, "tole:", client)
+			print(("Kaptam", unpacked_data, "tole:", client))
 			
 			x = eval(str(unpacked_data[0]) + unpacked_data[2].decode() + str(unpacked_data[1]))
 
>> Changes applied to /home/peter/Documents/DataSet/resources/scripts/ffab3717-a169-4762-9736-328d186d9789.py

